// root build.gradle

// Build Configurations
project.ext.set('archiveBuildTypes', ['debug', 'release'])

// Version Settings, loaded from version.properties
def version = new Properties()
version.load(new FileInputStream(rootProject.file('version.properties')))
project.ext.set('applicationId',       version['applicationId'])
project.ext.set('versionName',         version['versionName'])
project.ext.set('versionCode',         new Integer(version['versionCode']))
project.ext.set('compileSdkVersion',   new Integer(version['compileSdkVersion']))
project.ext.set('targetSdkVersion',    new Integer(version['targetSdkVersion']))
project.ext.set('minSdkVersion',       new Integer(version['minSdkVersion']))

// load access-token from token.properties
if(rootProject.file('token.properties').exists()) {
    def apikeys = new Properties()
    apikeys.load(new FileInputStream(rootProject.file('token.properties')))
    project.ext.set('accessToken', apikeys['accessToken'])
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jacoco:org.jacoco.core:0.8.3"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "2000" << "-Xmaxwarns" << "2000"
            options.compilerArgs << "-Xlint:unchecked" << '-Xlint:deprecation'
        }
    }
}

// rootProject > clean
task clean(type: Delete) {

    // delete build directories
    delete rootProject.buildDir
    delete project.buildDir

    // delete HTML coverage reports
    def covReport = rootProject.file("results/jacoco")
    if(covReport.exists()) {
        delete covReport.listFiles()
        delete covReport
    }

    // when task clean has finished
    doLast {

        // then recreate APK output directories
        mkdir("${project.buildDir}/outputs/apk")
        mkdir("${project.buildDir}/outputs/apk/debug")
        mkdir("${project.buildDir}/outputs/apk/release")
    }
}
