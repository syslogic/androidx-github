// root build.gradle

// Build Configurations
project.ext.set('archiveBuildTypes', ['debug', 'release'])

// Version Settings, loaded from file `version.properties`
def version = new Properties()
version.load(new FileInputStream(rootProject.file('version.properties')))
project.ext.set('applicationId',     version['applicationId'])
project.ext.set('versionName',       version['versionName'])
project.ext.set('versionCode',       new Integer(version['versionCode']))
project.ext.set('compileSdkVersion', new Integer(version['compileSdkVersion']))
project.ext.set('targetSdkVersion',  new Integer(version['targetSdkVersion']))
project.ext.set('minSdkVersion',     new Integer(version['minSdkVersion']))

// Load API access-token from file `token.properties`
if(rootProject.file('token.properties').exists()) {
    def apikeys = new Properties()
    apikeys.load(new FileInputStream(rootProject.file('token.properties')))
    project.ext.set('accessToken', apikeys['accessToken'])
} else {
    println "*** File `token.properties` is absent, the API will be rate-limited."
    project.ext.set('accessToken', "")
}

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.3"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.4.0-beta01"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "2000" << "-Xmaxwarns" << "2000"
            options.compilerArgs << "-Xlint:unchecked" << '-Xlint:deprecation'
        }
    }
}

// rootProject > clean
task clean(type: Delete) {

    // delete build directories
    delete rootProject.buildDir
    delete project.buildDir

    // when task clean has finished
    doLast {

        // then recreate APK output directories
        mkdir("${project.buildDir}/outputs/apk")
        mkdir("${project.buildDir}/outputs/apk/debug")
        mkdir("${project.buildDir}/outputs/apk/release")
    }
}
